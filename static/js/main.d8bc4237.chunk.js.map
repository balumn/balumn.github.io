{"version":3,"sources":["components/Header.js","components/Portfolio.js","components/Resume.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","id","className","style","color","fontFamily","href","target","rel","key","title","Component","Portfolio","Header_Header","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yOACqBA,mLAEjB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAEAH,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QACRJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eAEZL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,uBAAd,iBACAL,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAACC,MAAM,OAAQC,WAAW,gBAArC,qDACAR,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAACC,MAAM,OAAQC,WAAW,gBAArC,8KAEAR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACdL,EAAAC,EAAAC,cAAA,KAAGO,KAAK,yBAAyBC,OAAO,SAASC,IAAI,uBAAsBX,EAAAC,EAAAC,cAAA,gEAE5EF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeK,OAAO,SAASC,IAAI,sBAAsBF,KAAK,0BAAyBT,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iBAAjH,sBAEAL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,UAIXL,EAAAC,EAAAC,cAAA,MAAIU,IAAI,UACNZ,EAAAC,EAAAC,cAAA,KAAGO,KAAK,2BAA2BC,OAAO,SAASC,IAAI,uBAAsBX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAE5FL,EAAAC,EAAAC,cAAA,MAAIU,IAAI,YACNZ,EAAAC,EAAAC,cAAA,KAAGO,KAAK,sCAAsCC,OAAO,SAASC,IAAI,uBAAsBX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBAEvGL,EAAAC,EAAAC,cAAA,MAAIU,IAAI,iBACNZ,EAAAC,EAAAC,cAAA,KAAGO,KAAK,uCAAuCC,OAAO,SAASC,IAAI,uBAAsBX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,2BAExGL,EAAAC,EAAAC,cAAA,MAAIU,IAAI,aACNZ,EAAAC,EAAAC,cAAA,KAAGO,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAsBX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,sBAEtGL,EAAAC,EAAAC,cAAA,MAAIU,IAAI,MACNZ,EAAAC,EAAAC,cAAA,KAAGO,KAAK,uCAAuCC,OAAO,SAASC,IAAI,uBAAsBX,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBAExGL,EAAAC,EAAAC,cAAA,MAAIU,IAAI,UACNZ,EAAAC,EAAAC,cAAA,KAAGO,KAAK,aAAaC,OAAO,SAASC,IAAI,sBAAsBE,MAAM,aAAYb,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iCA1C9ES,aCgBrBC,GChBqBD,YCCfA,6LFKjB,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACc,EAAD,cAJgBF,8BGaTG,mLAZX,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,cAN3BD,aCQES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d8bc4237.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n              \n               <h1 className=\"responsive-headline\">I am Balu M N</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I'm a Computer Science Engineer and a freelancer.</h3>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I like to experiment with fullstack development and also learn new technologies. I love to spend my leisure hours learning, sharing knowledge or enjoying some yummy food.</h3>\n\n               <hr/>\n               <div className=\"feel-work\">\n                <a href=\"mailto:balumn@ieee.org\" target=\"_blank\" rel=\"noopener noreferrer\"><p>Feel free to contact me for works and suggestions</p></a>\n               </div>\n               <hr />\n               <br/>\n\n               <a className=\"button resum\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:balumn@ieee.org\"><i className=\"fa fa-pencil\"/>&nbsp;&nbsp;Contact Me</a>\n            \n               <ul className=\"social\">\n                  {/* <li key=\"email\">\n                    <a href=\"mailto:balumn@ieee.org\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-envelope\"></i></a>\n                  </li> */}\n                  <li key=\"github\">\n                    <a href=\"http://github.com/balumn\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-github\"></i></a>\n                  </li>\n                  <li key=\"linkedin\">\n                    <a href=\"https://www.linkedin.com/in/balumn/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-linkedin\"></i></a>\n                  </li>\n                  <li key=\"stackOverflow\">\n                    <a href=\"https://stackoverflow.com/cv/balumn/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-stack-overflow\"></i></a>\n                  </li>\n                  <li key=\"instagram\">\n                    <a href=\"https://www.instagram.com/balu.mn/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-instagram\"></i></a>\n                  </li>\n                  <li key=\"fb\">\n                    <a href=\"https://www.fb.me/balu.m.nandakumar/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-facebook\"></i></a>\n                  </li>\n                  <li key=\"resume\">\n                    <a href=\"balumn.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"My Resume\"><i className=\"fa fa-download\"></i></a>\n                  </li>\n               </ul>\n            </div>\n         </div>\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from './Header';\nimport Resume from './Resume';\nimport Footer from './Footer';\n\nclass Portfolio extends Component {\n  render() {\n    return (\n      <div >\n        <Header />\n        {/* <Resume /> */}\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;","import React, { Component } from 'react';\nexport default class Resume extends Component {\n   render() {\n      return (\n         <section id=\"resume\">\n\n            <div className=\"row work\">\n               <div className=\"three columns header-col\">\n                  <h1><span>Experience</span></h1>\n               </div>\n               <div className=\"nine columns main-col\">\n                  <div className=\"row item\">\n                     <div className=\"twelve columns\">\n                        <h3>Software Engineer</h3>\n                        <span><b>Codcor Technology Solutions</b> &nbsp; &bull; &nbsp;</span> <em className=\"date\">Sept 2019 - Present</em>\n                        <ul>\n                           <li>Development of the new API endpoints, full-stack programming tasks, as a part of high-volume telephony projects.</li>\n                           <li>Designing developing and deploying microservices for multiple projects.</li>\n                        </ul>\n                     </div>\n                  </div>\n\n               </div>\n            </div>\n            <div className=\"row education\">\n\n               <div className=\"three columns header-col\">\n                  <h1><span>Education</span></h1>\n               </div>\n\n               <div className=\"nine columns main-col\">\n                  <div className=\"row item\">\n                     <div className=\"twelve columns\">\n                        <h3>Viswayothi College of Engineering and Technology</h3>\n                        <span>Computer Science and Engineering &nbsp;&bull;&nbsp;</span> <em className=\"date\">June-2019</em>\n                        <p>\n                           <b>Chairman</b> : IEEE Student Branch VJCET (Feb2018 - Feb2019) <br />\n                           <b>Volunteer Secretary</b> : College NSS unit 587 (August2017 - August2018)\n                          </p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n\n            <div className=\"row skill\">\n               <div className=\"three columns header-col\">\n                  <h1><span>Skills</span></h1>\n               </div>\n               <div className=\"nine columns main-col\">\n                  <div className=\"bars\">\n                     <ul className=\"skills\">\n                        <li><span className={\"bar-expand html5\"}></span><em>HTML5</em></li>\n                        <li><span className={\"bar-expand css\"}></span><em>CSS</em></li>\n                        <li><span className={\"bar-expand react\"}></span><em>ReactJS</em></li>\n                        <li><span className={\"bar-expand python\"}></span><em>Python</em></li>\n                        <li><span className={\"bar-expand django\"}></span><em>Python Django</em></li>\n                     </ul>\n                  </div>\n               </div>\n            </div>\n\n         </section>\n      );\n   }\n}","import React, {Component} from \"react\";\n\nclass Footer extends Component {\n    render(){\n        return(\n            <React.Fragment>\n                <div className=\"foot\">\n                    <p><a href=\"https://www.copyleft.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Copyleft</a> &#127279;&nbsp;<a href=\"http://github.com/balumn\" target=\"_blank\" rel=\"noopener noreferrer\">balumn.github.io</a></p>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Footer;","import React, { Component } from 'react';\nimport Portfolio from './components/Portfolio';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Portfolio} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}